services:
  # PHP/Laravel Service
  app:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: laravel-app
    restart: unless-stopped
    working_dir: /var/www
    env_file:
      - ./server/.env
    volumes:
      - ./server:/var/www
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: |
      sh -c "
      php artisan optimize:clear
      php artisan migrate --force
      php artisan db:seed --force
      php artisan queue:work --verbose --tries=3 --delay=3 &
      php-fpm
      "
    environment:
      - DB_HOST=postgres
      - REDIS_HOST=redis
      - APP_ENV=local
    healthcheck:
      test: ["CMD-SHELL", "php artisan inspire > /dev/null 2>&1 || exit 1"]
      timeout: 10s
      retries: 5
      interval: 10s
      start_period: 60s
    networks:
      - app-network

  # Nginx Web Server
  webserver:
    image: nginx:alpine
    container_name: nginx-server
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    # *** THIS IS THE CRITICAL FIX: The ':ro' flag has been removed. ***
    # This allows Nginx to see all file changes from your local machine.
    volumes:
      - ./server:/var/www
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      app:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost/",
        ]
      timeout: 3s
      retries: 3
      interval: 10s
    networks:
      - app-network

  postgres:
    image: postgres:15
    container_name: postgres-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=digitek_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
      - ./pg_hba.conf:/etc/postgresql/pg_hba.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf -c hba_file=/etc/postgresql/pg_hba.conf
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-postgres} -h localhost",
        ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    networks:
      - app-network

  # Redis Cache Service
  redis:
    image: redis:7-alpine
    container_name: redis-cache
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: >
      redis-server
      --appendonly yes
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --save 60 1000
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 3s
      retries: 5
      interval: 5s
      start_period: 10s
    networks:
      - app-network

  # React Frontend Service
  client:
    build:
      context: ./client/digitek
      dockerfile: Dockerfile
    container_name: react-app
    restart: unless-stopped
    volumes:
      - ./client/digitek:/app
      - node_modules:/app/node_modules
    ports:
      - "5173:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - VITE_API_URL=http://localhost
      - VITE_HMR_HOST=localhost
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5173 || exit 1"]
      timeout: 10s
      retries: 3
      interval: 30s
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  node_modules:
    driver: local
  nginx-logs:
    driver: local
